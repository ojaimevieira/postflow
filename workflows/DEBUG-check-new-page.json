{
  "name": "DEBUG - Check New Page",
  "nodes": [
    {
      "parameters": {},
      "id": "manual-trigger-debug",
      "name": "Manual Trigger",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.notion.com/v1/databases/1c868fa9-6b04-811a-b439-da9ae42cf538/query",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Notion-Version",
              "value": "2022-06-28"
            },
            {
              "name": "Content-Type", 
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": []
        },
        "jsonBody": "{\n  \"filter\": {\n    \"and\": [\n      {\n        \"property\": \"Status\",\n        \"select\": {\n          \"equals\": \"Agendado\"\n        }\n      },\n      {\n        \"property\": \"Publicar?\",\n        \"checkbox\": {\n          \"equals\": true\n        }\n      },\n      {\n        \"property\": \"Plataforma\",\n        \"multi_select\": {\n          \"contains\": \"Instagram\"\n        }\n      }\n    ]\n  },\n  \"page_size\": 10\n}",
        "options": {}
      },
      "id": "notion-query-debug",
      "name": "Query Notion Posts",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [460, 300],
      "credentials": {
        "httpHeaderAuth": {
          "id": "notion_http_auth",
          "name": "Notion HTTP Auth"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// DEBUG - Verificar todas as p√°ginas encontradas\nconst items = $input.all();\n\nconsole.log('üîç === DEBUG P√ÅGINAS ENCONTRADAS ===');\nconsole.log('Total items recebidos:', items.length);\n\nfor (const item of items) {\n  const responseData = item.json;\n  const pages = responseData.results || [];\n  \n  console.log(`\\nüìÑ Total p√°ginas retornadas: ${pages.length}`);\n  \n  if (pages.length === 0) {\n    console.log('‚ùå NENHUMA P√ÅGINA ENCONTRADA!');\n    console.log('Verifique se existe p√°gina com:');\n    console.log('- Status = \"Agendado\"');\n    console.log('- Publicar? = true');\n    console.log('- Plataforma cont√©m \"Instagram\"');\n    return [{ json: { error: 'Nenhuma p√°gina encontrada' } }];\n  }\n  \n  pages.forEach((page, index) => {\n    console.log(`\\n=== P√ÅGINA ${index + 1} ===`);\n    console.log('üÜî ID:', page.id);\n    \n    const nome = page.properties?.Nome?.title?.[0]?.text?.content || 'SEM NOME';\n    const status = page.properties?.Status?.select?.name || 'SEM STATUS';\n    const publicar = page.properties?.['Publicar?']?.checkbox;\n    const plataformas = page.properties?.Plataforma?.multi_select || [];\n    const media = page.properties?.M√≠dia?.files?.[0];\n    const texto = page.properties?.['Texto do Post']?.rich_text?.[0]?.text?.content || 'SEM TEXTO';\n    \n    console.log('üìù Nome:', nome);\n    console.log('üìä Status:', status);\n    console.log('‚úÖ Publicar?:', publicar);\n    console.log('üéØ Plataformas:', plataformas.map(p => p.name));\n    console.log('üì∏ Tem m√≠dia?:', !!media);\n    console.log('üìÑ Texto:', texto.substring(0, 50) + '...');\n    \n    // Verificar se passou nos filtros\n    const passouStatus = status === 'Agendado';\n    const passouPublicar = publicar === true;\n    const passouPlataforma = plataformas.some(p => p.name === 'Instagram');\n    const temMedia = !!media;\n    \n    console.log('\\nüîç VERIFICA√á√ÉO DE FILTROS:');\n    console.log(`   Status \"Agendado\": ${passouStatus ? '‚úÖ' : '‚ùå'} (atual: ${status})`);\n    console.log(`   Publicar? = true: ${passouPublicar ? '‚úÖ' : '‚ùå'} (atual: ${publicar})`);\n    console.log(`   Tem Instagram: ${passouPlataforma ? '‚úÖ' : '‚ùå'} (plataformas: ${plataformas.map(p => p.name).join(', ')})`);\n    console.log(`   Tem m√≠dia: ${temMedia ? '‚úÖ' : '‚ùå'}`);\n    \n    const aprovado = passouStatus && passouPublicar && passouPlataforma && temMedia;\n    console.log(`\\nüéØ RESULTADO: ${aprovado ? '‚úÖ APROVADO' : '‚ùå REJEITADO'}`);\n  });\n}\n\nreturn items;"
      },
      "id": "debug-check",
      "name": "DEBUG Check Pages",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 300]
    }
  ],
  "connections": {
    "Manual Trigger": {
      "main": [
        [
          {
            "node": "Query Notion Posts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Query Notion Posts": {
      "main": [
        [
          {
            "node": "DEBUG Check Pages",
            "type": "main", 
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "debug-new-page",
  "id": "debug-new-page",
  "meta": {
    "instanceId": "debug-new-page"
  }
}
